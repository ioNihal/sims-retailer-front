// src/pages/Orders.jsx
import React, { useState, useEffect } from 'react';
import SearchBar from '../components/SearchBar';
import OrderList from '../components/OrderList';
import OrderDetails from '../components/OrderDetails';
import InvoiceList from '../components/InvoiceList';
import InvoiceDetails from '../components/InvoiceDetails';
import styles from '../styles/Orders.module.css';

const Orders = () => {
    const [activeTab, setActiveTab] = useState('orders'); // 'orders' or 'invoices'
    const [searchTerm, setSearchTerm] = useState('');
    const [orders, setOrders] = useState([]);
    const [invoices, setInvoices] = useState([]);
    const [selectedOrder, setSelectedOrder] = useState(null);
    const [selectedInvoice, setSelectedInvoice] = useState(null);
    const [selectedInvoices, setSelectedInvoices] = useState([]); // For multi-select

    // Simulate fetching orders from backend
    useEffect(() => {
        const sampleOrders = [
            { id: 1, orderNumber: 'ORD-001', items: ['Product A', 'Product B'], status: 'pending', total: 150.0 },
            { id: 2, orderNumber: 'ORD-002', items: ['Product C'], status: 'completed', total: 99.99 },
            { id: 3, orderNumber: 'ORD-003', items: ['Product D', 'Product E'], status: 'processing', total: 200.0 },
        ];
        setOrders(sampleOrders);
    }, []);

    // Simulate fetching invoices from backend (generated by admin)
    useEffect(() => {
        const sampleInvoices = [
            { id: 101, invoiceNumber: 'INV-001', orderDetails: 'Details for order ORD-001', total: 150.0 },
            { id: 102, invoiceNumber: 'INV-002', orderDetails: 'Details for order ORD-002', total: 99.99 },
        ];
        setInvoices(sampleInvoices);
    }, []);

    // Filter orders and invoices based on search term
    const filteredOrders = orders.filter(order =>
        order.orderNumber.toLowerCase().includes(searchTerm.toLowerCase())
    );
    const filteredInvoices = invoices.filter(invoice =>
        invoice.invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())
    );

    const handleOrderSelect = (order) => {
        setSelectedOrder(order);
    };

    const handleInvoiceSelect = (invoice) => {
        setSelectedInvoice(invoice);
    };

    // Toggle invoice selection for multi-export
    const toggleInvoiceSelection = (invoiceId) => {
        setSelectedInvoices(prev =>
            prev.includes(invoiceId)
                ? prev.filter(id => id !== invoiceId)
                : [...prev, invoiceId]
        );
    };

    // Cancel order only if its status is pending
    const cancelOrder = (orderId) => {
        if (window.confirm("Are you sure you want to cancel this order?")) {
            setOrders(prevOrders =>
                prevOrders.map(order =>
                    order.id === orderId ? { ...order, status: 'cancelled' } : order
                )
            );
            setSelectedOrder(null);
        }
    };

    // Simulate exporting selected invoices as PDF
    const exportInvoices = () => {
        if (selectedInvoices.length === 0) {
            alert('Please select at least one invoice to export.');
            return;
        }
        // In a real app, generate a PDF from the selected invoices data.
        alert(`Exporting invoices: ${selectedInvoices.join(', ')} as PDF...`);
        // Optionally, clear selection after exporting:
        setSelectedInvoices([]);
    };

    return (
        <div className={styles.ordersPage}>
            <div className={styles.tabButtons}>
                <button
                    className={activeTab === 'orders' ? styles.active : ''}
                    onClick={() => setActiveTab('orders')}
                >
                    Orders
                </button>
                <button
                    className={activeTab === 'invoices' ? styles.active : ''}
                    onClick={() => setActiveTab('invoices')}
                >
                    Invoices
                </button>
            </div>
            <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />
            <div className={styles.content}>
                {activeTab === 'orders' && (
                    <>
                        <div className={styles.listContainer}>
                            <OrderList orders={filteredOrders} onSelect={handleOrderSelect} />
                        </div>
                        <div className={styles.detailsContainer}>
                            {selectedOrder ? (
                                <OrderDetails order={selectedOrder} onCancel={cancelOrder} />
                            ) : (
                                <p>Select an order to view details</p>
                            )}
                        </div>
                    </>
                )}
                {activeTab === 'invoices' && (
                    <>
                        <div className={styles.listContainer}>
                            <InvoiceList
                                invoices={filteredInvoices}
                                selectedInvoices={selectedInvoices}
                                toggleInvoiceSelection={toggleInvoiceSelection}
                                onSelect={handleInvoiceSelect}
                            />
                        </div>
                        <div className={styles.detailsContainer}>
                            {selectedInvoice ? (
                                <InvoiceDetails
                                    invoice={selectedInvoice}
                                    onClose={() => setSelectedInvoice(null)}
                                />
                            ) : (
                                <p>Select an invoice to view details</p>
                            )}
                            {filteredInvoices.length > 0 && (
                                <button onClick={exportInvoices} className={styles.exportButton}>
                                    Export Selected as PDF
                                </button>
                            )}
                        </div>
                    </>
                )}
            </div>
        </div>
    );
};

export default Orders;
